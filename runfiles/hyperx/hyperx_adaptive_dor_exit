// $Id$

// Copyright (c) 2007-2012, Trustees of The Leland Stanford Junior University
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

//A flattened butterfly configurate file with many tweaks from the
//default settings.


// Flow control
// Total number of VCs must match the above assignments
num_vcs     = 2;
//vc_buf_size = 4;
latency_thres = 10000000.0;


sim_type = latency;
injection_rate_uses_flits = 1;
use_noc_latency = 0;

// Flatfly
//
// #node = k^(n+1)
//
// x, y, specifies the arrangement of routers in x and y dim
// xr, yr specifiies the arayment of clients in a router
//
topology = hyperx;


c  = 4;
k  = 4;
n  = 2;


//x = 4;
//y = 4;

//xr = 2;
//yr = 2;


//
// Routing
//

routing_function =adaptive_dor_exit;

//for injection mode
injection_rate = 1.0;
traffic = tornado;
//classes = 4;

//latency: drains all packet, throughput:no drain?
//sim_type = latency;

watch_out=fichero.txt;
watch_packets = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,40,55,89,120,121,122,123};

sample_period = 1000;
warmup_periods = 200;
max_samples = 204;


input_speedup = 4;
output_speedup = 4;
internal_speedup = 1.5;
print_csv_results = 1;
